name: Go

on:
  push:
    paths: ["**.go"]
  pull_request:
    paths: ["**.go"]

jobs:
  build:
    strategy:
      matrix:
        go: ["stable"]
        os: ["ubuntu-latest"]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go }}

  security:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: '1.22'
      - name: Run govulncheck
        run: go run golang.org/x/vuln/cmd/govulncheck@latest -test ./...
      - name: Run securego/gosec
        run: go run github.com/securego/gosec/v2/cmd/gosec@latest -quiet ./...

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v6.1.0

  unit-test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
      - name: Run unit tests
        run: go test -race $(go list ./... | grep -v "github.com/lucasvillarinho/nofy/tests/e2e")
  e2e-test:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v3
      - name: Run e2e tests
        env:
          SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}
          SLACK_CHANNEL: ${{ secrets.SLACK_CHANNEL }}
          RESEND_TO: ${{ secrets.RESEND_TO }}
          RESEND_TOKEN: ${{ secrets.RESEND_TOKEN }}
        run: go test -race $(go list ./... | grep "github.com/lucasvillarinho/nofy/tests/e2e")
